@model DragonsLegacy.Models.Project

<h2 class="text-center">Show Project</h2>

@if (ViewBag.Message != null)
{
    <br />
    <br />
    <div class="alert @ViewBag.Alert p-3 rounded-3 text-center mb-5">
        @ViewBag.Message
    </div>
}

<br /><br />

<div class="card">

    @Html.Partial("GeneralInfo", Model)

    <br />

    @if (ViewBag.ShowButtons || ViewBag.IsAdmin)
    {
        <div class="d-flex flex-row justify-content-around">

            <a class="btn btn-primary" href="/Projects/Edit/@Model.Id">Edit</a>

            <form method="post" action="/Projects/Delete/@Model.Id">

                <button type="submit" class="btn btn-danger">Delete</button>

            </form>

        </div>

        <br />

        <div class="d-flex flex-row justify-content-around">
            <form method="post" asp-controller="Projects" asp-action="AddTeam">
                <input type="hidden" name="ProjectId" value="@Model.Id" />
                <div class="d-flex flex-row justify-content-center p-3">
                    <div>
                        <select name="TeamId" class="form-control">
                            <option selected disabled>Add this team to the project</option>
                            @foreach (var team in ViewBag.NotInProject)
                            {
                                <option value="@team.Id">@team.Name</option>
                            }
                        </select>
                    </div>
                    <div>
                        <input type="submit" class="btn btn-success alert-success" value="+" />
                    </div>
                </div>
            </form>

            <form method="post" asp-controller="Projects" asp-action="RemoveTeam">
                <input type="hidden" name="ProjectId" value="@Model.Id" />
                <div class="d-flex flex-row justify-content-center p-3">
                    <div>
                        <select name="TeamId" class="form-control">
                            <option selected disabled>Remove this user to the team</option>
                            @foreach (var team in ViewBag.InProject)
                            {
                                <option value="@team.Id">@team.Name</option>
                            }
                        </select>
                    </div>
                    <div>
                        <input type="submit" class="btn btn-danger alert-danger" value="-" />
                    </div>
                </div>
            </form>
        </div>
    }

</div>

<br /><b3 />

<h3 class="text-center">Teams</h3>
<div class="d-flex flex-row justify-content-center">
    @foreach (var team in ViewBag.Teams)
    {
        <div style="width: 18rem;">
            <div class="card m-2 p-2">
                <p class="card-text text-center"><a href="@Url.Action("Show", "Teams", new { id = team.Id })">@team.Name</a></p>
            </div>
        </div>
    }
</div>

@if (ViewBag.ShowButtons || ViewBag.IsAdmin)
{
    <div class="container">

        <div class="row">

            <div class="card mt-3">

                <div class="card-body">

                    <button class="btn btn-primary" id="toggleFormButton">Add New Task</button>
                    <form id="addTaskForm" style="display: none;" method="post" action="/Projects/Show/@Model.Id">
                        <div class="card-body">
                            <input type="hidden" name="ProjectId" value="@Model.Id" />

                            @Html.Label("Name", "Name")
                            <br />
                            <textarea class="form-control" name="Name"></textarea>
                            @Html.ValidationMessage("Name", null, new { @class = "text-danger" })
                            <br /><br />

                            @Html.Label("Description", "Description")
                            <br />
                            <textarea class="form-control" name="Description"></textarea>
                            @Html.ValidationMessage("Description", null, new { @class = "text-danger" })
                            <br /><br />

                            @Html.Label("Priority", "Priority")
                            <br />
                            <select name="Priority" class="form-control">
                                <option selected disabled>Select a priority</option>
                                <option value="1">Low</option>
                                <option value="2">Medium</option>
                                <option value="3">High</option>
                            </select>
                            <br /><br />

                            @Html.Label("Status", "Status")
                            <br />
                            <select name="Status" class="form-control">
                                <option selected disabled>Select a status</option>
                                <option value="NotStarted">Not Started</option>
                                <option value="InProgress">In Progress</option>
                                <option value="Completed">Completed</option>
                            </select>
                            <br /><br />

                            @Html.Label("Due Date", "Deadline")
                            <br />
                            <input type="date" name="Deadline" class="form-control" />
                            <br /><br />

                            <input type="hidden" name="StartDate" value="@DateTime.Now" />

                            <i class="bi bi-card-list"></i>
                            <label>Assign User</label>
                            @Html.DropDownList("UserId", new SelectList(ViewBag.AllUsers, "Value", "Text"), null, new { @class = "form-control" })
                            <br/><br/>

                            @Html.Label("Experience Points", "ExperiencePoints")
                            <br />
                            <input type="number" class="form-control" name="ExperiencePoints">
                            @Html.ValidationMessage("ExperiencePoints", null, new { @class = "text-danger" })
                            <br /><br />

                            @Html.Label("Coins", "Coins")
                            <br />
                            <input type="number" class="form-control" name="Coins">
                            @Html.ValidationMessage("Coins", null, new { @class = "text-danger" })
                            <br /><br />

                            <button class="btn btn-primary" type="submit">Add task</button>
                        </div>
                    </form>

                </div>

            </div>

        </div>

        <div class="col-md-2"></div>

    </div>

    <script>
        document.getElementById("toggleFormButton").addEventListener("click", function() 
        {
            // Toggle the visibility of the form
            var form = document.getElementById("addTaskForm");
            form.style.display = (form.style.display === "none") ? "block" : "none";
        });
    </script>

}


